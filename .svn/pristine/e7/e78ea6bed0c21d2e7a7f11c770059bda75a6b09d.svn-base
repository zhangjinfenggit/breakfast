package com.hmw.open.web.weixin;

import java.io.File;
import java.util.Date;

import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;

import org.apache.commons.io.FileUtils;
import org.apache.commons.lang3.StringUtils;
import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;

import com.baomidou.mybatisplus.mapper.EntityWrapper;
import com.baomidou.mybatisplus.mapper.Wrapper;
import com.hmw.open.common.result.BaseResult;
import com.hmw.open.common.result.ErrorCode;
import com.hmw.open.model.BfOrder;
import com.hmw.open.model.BfRefundRecord;
import com.hmw.open.service.IBfOrderService;
import com.hmw.open.service.IBfRefundRecordService;
import com.hmw.open.web.weixin.request.shopcontroller.RefundResquest;

/**
 * 申请退款
 * @author zhulei
 * @time 2017-10-08
 */
@Controller
@RequestMapping("/weixin")
public class WeiXinRefundController {

	private final static Logger logger = Logger.getLogger(WeiXinRefundController.class);
	
	@Autowired
	IBfRefundRecordService bfRefundRecordService;
	
	@Autowired
	IBfOrderService bfOrderService;
	
	
	/**
	 * 申请退款说明信息保存
	 * @param request
	 * @param form
	 * @return
	 */
	@RequestMapping(value = { "/saveRefundMsg" }, method = { RequestMethod.POST })
	public @ResponseBody BaseResult saveRefundMsg(HttpServletRequest request, @RequestBody RefundResquest form, @RequestParam("photo") MultipartFile file) {
		logger.info("======开始申请退款说明信息保存======");
		try {
			if (null == form ) {
				logger.error("申请退款说明信息, 入参错误", null);
				return BaseResult.fail(ErrorCode.ParaCheckErrorRetCode, ErrorCode.ParaCheckErrorRetInfo);
			}
			BfRefundRecord bfRefund = new BfRefundRecord();
			//图片上传
			if(!file.isEmpty()){
				 ServletContext  sc =request.getSession().getServletContext();
				 //String dir = "/usr/local/nginx/html/coupon"; 
				 String dir = sc.getRealPath("/upload");   //设定保存文件路径
				 String filename = file.getOriginalFilename(); //获取上传时的文件路径名
				 Long time = System.nanoTime();
				 String ext = filename.substring(filename.indexOf("."));
				 filename =  time + ext;
				 FileUtils.writeByteArrayToFile(new File(dir,filename), file.getBytes());
				 bfRefund.setPhoto(filename);
				}
			//根据订单号查询订单信息
			Wrapper<BfOrder> wrapper = new EntityWrapper<BfOrder>();
			if(StringUtils.isNotEmpty(form.getOrderNo())){
				wrapper.eq("order_no", form.getOrderNo());
			}
			BfOrder bfOrder = bfOrderService.selectOne(wrapper);
			if(bfOrder!=null){
				bfRefund.setRefundRemark(form.getRefundRemark());
				bfRefund.setType(form.getType());
				bfRefund.setUserId(bfOrder.getUserId());
				bfRefund.setPhone(bfOrder.getPhone());
				bfRefund.setShopId(bfOrder.getShopId());
				bfRefund.setShopName(bfOrder.getShopName());
				bfRefund.setOrderId(bfOrder.getId());
				bfRefund.setOrderNo(form.getOrderNo());
				bfRefund.setCreateTime(new Date());
				bfRefund.setRemark("申请退款");
			}else{
				logger.info("此订单信息在订单表不存在！");
				return BaseResult.fail("此订单信息在订单表不存在！");
			}
			//保存退款说明信息
			if(!bfRefundRecordService.insert(bfRefund)){
				logger.info("插入退款说明失败！");
				return BaseResult.fail("插入退款说明失败！");
			}
			logger.info("======结束申请退款说明信息保存======");
			return BaseResult.success();
		} catch (Exception e) {
			logger.error("申请退款说明信息 error:", e);
			return BaseResult.exception(e.getMessage());
		}
	}
}
